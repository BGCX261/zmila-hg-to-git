---------------------------------------------
divCnt[n] :=
{
	fa = factor[n]
	c = 1
	for i = 0 to length[fa]-1
	{
		c = c * (fa@i@1 + 1) 
	}
	return c
}

problem179[] := 
{
	prev = 0
	count = 0
	for i = 2 to 10^3 
	{
		curr = divCnt[i]
		if ( prev == curr )
		{
			count = count + 1
			println[ "$i $prev" ]
		}
		prev = curr
	}
	
	return count
}

start = now[]
problem179[]
println[ now[] - start ]

// 986262 	// 31907/200 (exactly 159.535) s (time)

------------------------------------------
int N = 10000000;
int sep = 200000;
int[] count = new int[N];
int found = 0;
 
 
for (int b = 0; b < N; b+= sep)
{
   for ( int i = 2; i < sep; i++ )
   {
      int min = (b+i-1) / i;
      min *= i;
      int max = b + sep;
      for (int f = min; f < max; f+=i)
      {
         count[f]++;
      }
   }
}
 
for (int i = sep; i < N; i++)
{
    for (int f = 0; f < N; f += i)
    {
        count[f]++;
    }
}
 
for (int i = 2; i < N; i++)
{
   if (count[i] == count[i - 1]) found++;
}
---------------------------------------------
